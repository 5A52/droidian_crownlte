name: hybris-mobian rootfs-builder

on:
  push:
    tags:
      - '**'
jobs:
  once:
    runs-on: ubuntu-20.04
    name: Create GitHub release
    if: startsWith(github.ref, 'refs/tags/hybris-mobian')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    runs-on: ubuntu-20.04
    needs: once

    strategy:
      fail-fast: true
      matrix:
        arch: [amd64]
        template: [rootfs-builder]
        dist: [bullseye]
        namespace: [hybrismobian]
        debos_arch: [amd64,armhf,arm64]

    name: ${{ matrix.template }}:${{ matrix.dist }} on ${{ matrix.debos_arch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v1

      - name: Create build dir
        run: mkdir -p /tmp/buildd-results

      - name: Pull container
        run: docker pull quay.io/${{ matrix.namespace }}/${{ matrix.template }}:${{ matrix.dist }}-${{ matrix.arch }}

      - name: Start Container
        run: echo CONTAINER_HASH=$(docker run --detach --privileged -v /tmp/buildd-results:/buildd -v /dev:/dev -v /sys/fs/cgroup:/sys/fs/cgroup -v ${PWD}:/buildd/sources --security-opt seccomp:unconfined quay.io/${{ matrix.namespace }}/${{ matrix.template }}:${{ matrix.dist }}-${{ matrix.arch }} /sbin/init) >> $GITHUB_ENV

      - name: Build rootfs
        run: docker exec $CONTAINER_HASH /bin/sh -c 'cd /buildd/sources; debos -t architecture:${{ matrix.debos_arch }} device.yml'

      - name: Upload Release Asset
        id: upload-release-asset
        if: startsWith(github.ref, 'refs/tags/hybris-mobian')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./hybrismobian-rootfs-api28gsi-${{ matrix.debos_arch }}.tar.gz
          asset_name: hybrismobian-rootfs-api28gsi-${{ matrix.debos_arch }}.tar.gz
          asset_content_type: application/gzip
